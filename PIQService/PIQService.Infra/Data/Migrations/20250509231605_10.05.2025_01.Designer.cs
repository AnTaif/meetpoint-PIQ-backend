// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIQService.Infra.Data;

#nullable disable

namespace PIQService.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250509231605_10.05.2025_01")]
    partial class _10052025_01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.AssessmentDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("char(36)")
                        .HasColumnName("team_id");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("char(36)")
                        .HasColumnName("template_id");

                    b.Property<bool>("UseBehaviorAssessment")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("use_behavior_assessment");

                    b.Property<bool>("UseCircleAssessment")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("use_circle_assessment");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("TemplateId");

                    b.ToTable("assessments");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.AssessmentMarkDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("AssessedId")
                        .HasColumnType("char(36)")
                        .HasColumnName("assessed_id");

                    b.Property<Guid>("AssessorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("assessor_id");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("session_id");

                    b.HasKey("Id");

                    b.HasIndex("AssessedId");

                    b.HasIndex("AssessorId");

                    b.HasIndex("SessionId");

                    b.ToTable("assessment_marks");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.ChoiceDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("question_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("text");

                    b.Property<short>("Value")
                        .HasColumnType("smallint")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("assessment_choices");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.CriteriaDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("assessment_criteria");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.FormDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<sbyte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("assessment_forms");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.QuestionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CriteriaId")
                        .HasColumnType("char(36)")
                        .HasColumnName("criteria_id");

                    b.Property<Guid>("FormId")
                        .HasColumnType("char(36)")
                        .HasColumnName("form_id");

                    b.Property<sbyte>("Order")
                        .HasColumnType("tinyint")
                        .HasColumnName("order");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("question_text");

                    b.Property<float>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaId");

                    b.HasIndex("FormId");

                    b.ToTable("assessment_questions");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.TemplateDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("BehaviorFormId")
                        .HasColumnType("char(36)")
                        .HasColumnName("behavior_form_id");

                    b.Property<Guid>("CircleFormId")
                        .HasColumnType("char(36)")
                        .HasColumnName("circle_form_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("BehaviorFormId");

                    b.HasIndex("CircleFormId");

                    b.ToTable("assessment_templates");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.DirectionDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnName("event_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("directions");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.EventDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("char(36)")
                        .HasColumnName("assessment_template_id");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("events");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.ProjectDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("DirectionId")
                        .HasColumnType("char(36)")
                        .HasColumnName("direction_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.TeamDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)")
                        .HasColumnName("project_id");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("tutor_id");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TutorId");

                    b.ToTable("teams");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.UserDbo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext")
                        .HasColumnName("middle_name");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("char(36)")
                        .HasColumnName("team_id");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("forms_criteria", b =>
                {
                    b.Property<Guid>("CriteriaListId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("FormDboId")
                        .HasColumnType("char(36)");

                    b.HasKey("CriteriaListId", "FormDboId");

                    b.HasIndex("FormDboId");

                    b.ToTable("forms_criteria");
                });

            modelBuilder.Entity("marks_choices", b =>
                {
                    b.Property<Guid>("AssessmentMarkDboId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChoicesId")
                        .HasColumnType("char(36)");

                    b.HasKey("AssessmentMarkDboId", "ChoicesId");

                    b.HasIndex("ChoicesId");

                    b.ToTable("marks_choices");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.AssessmentDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.TeamDbo", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.Assessments.TemplateDbo", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.AssessmentMarkDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.UserDbo", "Assessed")
                        .WithMany()
                        .HasForeignKey("AssessedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.UserDbo", "Assessor")
                        .WithMany()
                        .HasForeignKey("AssessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.Assessments.AssessmentDbo", "Assessment")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assessed");

                    b.Navigation("Assessment");

                    b.Navigation("Assessor");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.ChoiceDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.Assessments.QuestionDbo", null)
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.QuestionDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.Assessments.CriteriaDbo", "Criteria")
                        .WithMany()
                        .HasForeignKey("CriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.Assessments.FormDbo", null)
                        .WithMany("Questions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criteria");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.TemplateDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.Assessments.FormDbo", "BehaviorForm")
                        .WithMany()
                        .HasForeignKey("BehaviorFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.Assessments.FormDbo", "CircleForm")
                        .WithMany()
                        .HasForeignKey("CircleFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BehaviorForm");

                    b.Navigation("CircleForm");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.DirectionDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.EventDbo", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.EventDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.Assessments.TemplateDbo", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.ProjectDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.DirectionDbo", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.TeamDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.ProjectDbo", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.UserDbo", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.UserDbo", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.TeamDbo", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("forms_criteria", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.Assessments.CriteriaDbo", null)
                        .WithMany()
                        .HasForeignKey("CriteriaListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.Assessments.FormDbo", null)
                        .WithMany()
                        .HasForeignKey("FormDboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marks_choices", b =>
                {
                    b.HasOne("PIQService.Models.Dbo.Assessments.AssessmentMarkDbo", null)
                        .WithMany()
                        .HasForeignKey("AssessmentMarkDboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIQService.Models.Dbo.Assessments.ChoiceDbo", null)
                        .WithMany()
                        .HasForeignKey("ChoicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.FormDbo", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.Assessments.QuestionDbo", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("PIQService.Models.Dbo.TeamDbo", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
